y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
grid.newpage()
grid.newpage()
library(grid)
library(grid)
pdf(file = "decomposicao/graficos_pim.pdf", width = 8, height = 6)
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
grid.newpage()
grid.table(df_serie)
dev.off()
pdf(file = "decomposicao/graficos_pim.pdf", width = 8, height = 6)
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
grid.newpage(recording = )
grid.table(df_serie)
dev.off()
install.packages("dygraphs")
install.packages('readxl')
install.packages('openxlsx')
install.packages('ggplot2')
install.packages('gridExtra')
library(gridExtra)
library(openxlsx)
library(readxl)
library(dygraphs)
library(ggplot2)
library(grid)
dados <- read_excel('pim.xlsx')
head(dados)
dados$Month <- as.Date(dados$Month)
head(dados)
dados <- dados[order(dados$Month),]
serie <- ts(dados$Value, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
df_serie <- data.frame(Month = as.yearmon(time(serie)),
Value = as.numeric(serie))
df_serie
dir.create('decomposicao')
write.xlsx(df_serie, 'decomposicao/df_serie.xlsx')
decomp_stl <- stl(serie, s.window = "periodic")
pdf(file = "decomposicao/graficos_pim.pdf", width = 8, height = 6)
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
dev.off()
install.packages("gridExtra")
install.packages("openxlsx")
install.packages("ggplot2")
install.packages("readxl")
install.packages("dygraphs")
install.packages("dygraphs")
install.packages('readxl')
install.packages('openxlsx')
install.packages('ggplot2')
install.packages('gridExtra')
install.packages("ggplot2")
library(gridExtra)
library(openxlsx)
library(readxl)
library(dygraphs)
library(ggplot2)
library(grid)
dados <- read_excel('pim.xlsx')
head(dados)
dados$Month <- as.Date(dados$Month)
head(dados)
dados <- dados[order(dados$Month),]
head(dados)
tail(dados)
dados <- dados[order(dados$Month),]
serie <- ts(dados$Value, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
df_serie <- data.frame(Month = as.yearmon(time(serie)),
Value = as.numeric(serie))
df_serie
dir.create('decomposicao')
write.xlsx(df_serie, 'decomposicao/df_serie.xlsx')
decomp_stl <- stl(serie, s.window = "periodic")
pdf(file = "decomposicao/graficos_pim.pdf", width = 8, height = 6)
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
dev.off()
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
tendencia <- decomp_stl$time.series(,'trend')
tendencia
tendencia <- decomp_stl$time.series(,'trend')
tendencia <- decomp_stl$time.series[,'trend']
tendencia
Sazonalidade <- decomp_stl$time.series[,'seasonal']
Sazonalidade
residuos <- decomp_stl$time.series[,'remainder']
residuos
df_tendencia <- data.frame(
Date = time(serie),
Tendencia = decomp_stl$time.series[,'trend']
)
write.xlsx(df_tendencia, file = 'decomposicao/tendencia.xlsx')
install.packages("dygraphs")
install.packages('readxl')
install.packages('openxlsx')
install.packages('ggplot2')
install.packages('gridExtra')
library(gridExtra)
library(openxlsx)
library(readxl)
library(dygraphs)
library(ggplot2)
library(grid)
dados <- read_excel('pim.xlsx')
head(dados)
dados$Month <- as.Date(dados$Month)
head(dados)
tail(dados)
dados <- dados[order(dados$Month),]
serie <- ts(dados$Value, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
df_serie <- data.frame(Month = as.yearmon(time(serie)),
Value = as.numeric(serie))
df_serie
dir.create('decomposicao')
write.xlsx(df_serie, 'decomposicao/df_serie.xlsx')
decomp_stl <- stl(serie, s.window = "periodic")
pdf(file = "decomposicao/graficos_pim.pdf", width = 8, height = 6)
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
dev.off()
tendencia <- decomp_stl$time.series[,'trend']
tendencia
df_tendencia <- data.frame(
Date = time(serie),
Tendencia = decomp_stl$time.series[,'trend']
)
write.xlsx(df_tendencia, file = 'decomposicao/tendencia.xlsx')
Sazonalidade <- decomp_stl$time.series[,'seasonal']
Sazonalidade
residuos <- decomp_stl$time.series[,'remainder']
residuos
install.packages("ggplot2")
df <- data.frame(
Date = time(serie),
Tendencia = decomp_stl$time.series[,'trend']
Sazonalidade <- decomp_stl$time.series[,'seasonal']
df <- data.frame(
Date = time(serie),
Tendencia = decomp_stl$time.series[,'trend'],
Sazonalidade <- decomp_stl$time.series[,'seasonal'],
residuos <- decomp_stl$time.series[,'remainder']
)
decomposicao <- createWorkbook()
addWorksheet(decomposicao, 'decomp_stl')
writeDataTable(decomposicao, sheet = 'decomp_stl',x = df, tableStyle = 'TableStyleMedium2')
saveWorkbook(decomposicao, 'decomposiçao.xlsx')
decomposicao <- createWorkbook()
addWorksheet(decomposicao, 'decomp_stl')
writeDataTable(decomposicao, sheet = 'decomp_stl',x = df, tableStyle = 'TableStyleMedium2')
saveWorkbook(decomposicao, 'decomposicao/decomposicao.xlsx')
head(df)
df$Date <- as.yearmon(df$Date)
decomposicao <- createWorkbook()
addWorksheet(decomposicao, 'decomp_stl')
writeDataTable(decomposicao, sheet = 'decomp_stl',x = df, tableStyle = 'TableStyleMedium2')
saveWorkbook(decomposicao, 'decomposicao/decomposicao.xlsx')
decomposicao <- createWorkbook()
addWorksheet(decomposicao, 'decomp_stl')
writeDataTable(decomposicao, sheet = 'decomp_stl',x = df, tableStyle = 'TableStyleMedium2')
saveWorkbook(decomposicao, 'decomposicao/decomposicao.xlsx', overwrite = TRUE)
df_serie$Date <- as.yearmon(df_serie$Date)
td_serie <- createWorkbook()
addWorksheet(td_serie, 'decomp_stl')
writeDataTable(dtd_serie, sheet = 'decomp_stl',x = df_serie, tableStyle = 'TableStyleMedium2')
td_serie <- createWorkbook()
addWorksheet(td_serie, 'decomp_stl')
writeDataTable(td_serie, sheet = 'decomp_stl',x = df_serie, tableStyle = 'TableStyleMedium2')
saveWorkbook(td_serie, 'decomposicao/td_serie.xlsx', overwrite = TRUE)
df <- data.frame(
Date = time(serie),
Tendencia = decomp_stl$time.series[,'trend'],
Sazonalidade <- decomp_stl$time.series[,'seasonal'],
residuos <- decomp_stl$time.series[,'remainder']
)
install.packages("dygraphs")
install.packages('readxl')
install.packages('openxlsx')
install.packages('ggplot2')
install.packages('gridExtra')
library(gridExtra)
library(openxlsx)
library(readxl)
library(dygraphs)
library(ggplot2)
library(grid)
dados <- read_excel('pim.xlsx')
head(dados)
dados$Month <- as.Date(dados$Month)
head(dados)
tail(dados)
dados <- dados[order(dados$Month),]
serie <- ts(dados$Value, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
df_serie <- data.frame(Month = as.yearmon(time(serie)),
Value = as.numeric(serie))
df_serie
#df_serie$Date <- as.yearmon(df_serie$Date)
td_serie <- createWorkbook()
addWorksheet(td_serie, 'decomp_stl')
writeDataTable(td_serie, sheet = 'decomp_stl',x = df_serie,
tableStyle = 'TableStyleMedium2')
saveWorkbook(td_serie, 'decomposicao/td_serie.xlsx', overwrite = TRUE)
dir.create('decomposicao')
decomp_stl <- stl(serie, s.window = "periodic")
pdf(file = "decomposicao/graficos_pim.pdf", width = 8, height = 6)
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
dev.off()
df <- data.frame(
Date = time(serie),
Tendencia = decomp_stl$time.series[,'trend'],
Sazonalidade <- decomp_stl$time.series[,'seasonal'],
residuos <- decomp_stl$time.series[,'remainder']
)
head(df)
df$Date <- as.yearmon(df$Date)
decomposicao <- createWorkbook()
addWorksheet(decomposicao, 'decomp_stl')
writeDataTable(decomposicao, sheet = 'decomp_stl',x = df,
tableStyle = 'TableStyleMedium2')
saveWorkbook(decomposicao, 'decomposicao/decomposicao.xlsx', overwrite = TRUE)
install.packages("gridExtra")
install.packages("readxl")
install.packages("openxlsx")
install.packages("ggplot2")
install.packages("dygraphs")
dir.create('decomposicao', overwrite = TRUE)
if(!dir.exists('decomposicao')){
dir.create('decomposicao')
}
serie
dados <- read_excel('pim.xlsx')
head(dados)
tail(dados)
dados$Month <- as.Date(dados$Month)
dados <- dados[order(dados$Month),]
head(dados)
tail(dados)
serie <- ts(dados$Value, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
decomp_stl <- stl(serie, s.window = "periodic")
if(!dir.exists('decomposicao')){
dir.create('decomposicao')
}
df_serie <- data.frame(Month = as.yearmon(time(serie)),
Value = as.numeric(serie))
df_serie
df_serie$Date <- as.yearmon(df_serie$Date)
library(gridExtra)
library(openxlsx)
library(readxl)
library(dygraphs)
library(ggplot2)
library(grid)
dados <- read_excel('pim.xlsx')
head(dados)
tail(dados)
dados$Month <- as.Date(dados$Month)
dados <- dados[order(dados$Month),]
head(dados)
tail(dados)
serie <- ts(dados$Value, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
decomp_stl <- stl(serie, s.window = "periodic")
if(!dir.exists('decomposicao')){
dir.create('decomposicao')
}
df_serie <- data.frame(Month = as.yearmon(time(serie)),
Value = as.numeric(serie))
df_serie
#df_serie$Date <- as.yearmon(df_serie$Date)
td_serie <- createWorkbook()
addWorksheet(td_serie, 'decomp_stl')
writeDataTable(td_serie, sheet = 'decomp_stl',x = df_serie,
tableStyle = 'TableStyleMedium2')
saveWorkbook(td_serie, 'decomposicao/td_serie.xlsx', overwrite = TRUE)
pdf(file = "decomposicao/graficos_pim.pdf", width = 8, height = 6)
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
dev.off()
df <- data.frame(
Date = time(serie),
Tendencia = decomp_stl$time.series[,'trend'],
Sazonalidade <- decomp_stl$time.series[,'seasonal'],
residuos <- decomp_stl$time.series[,'remainder']
)
head(df)
df$Date <- as.yearmon(df$Date)
decomposicao <- createWorkbook()
addWorksheet(decomposicao, 'decomp_stl')
writeDataTable(decomposicao, sheet = 'decomp_stl',x = df,
tableStyle = 'TableStyleMedium2')
saveWorkbook(decomposicao, 'decomposicao/decomposicao.xlsx', overwrite = TRUE)
library(readxl)
library(dplyr)
dados <- read_excel('pim.xlsx')
str(dados)
dados <- dados %>%
mutate(Month_num = as.numeric(format(Month, "%Y")) * 12 + as.numeric(format(Month, "%m")))
model <- lm(Value ~ Month_num, data = dados)
model$coefficients
model$residuals
summary(model)
install.packages("forecast")
install.packages("readxl")
install.packages('openxlsx')
library(forecast)
library(readxl)
library(openxlsx)
if(!dir.exists('amortecomentoExpon'))
dados <- read_excel("pim.xlsx")
if(!dir.exists('amortecomentoExpon')){
dir.create('amortecomentoExpon')
}
serie <- ts(dados, start = c(2000,1), end = c(2019,12), frequency = 12)
treino <- window(serie, end = c(2018,12))
write.xlsx(treino,'amortecomentoExpon/treino.xlsx')
write.csv(treino,'amortecomentoExpon/treino.csv', row.names = FALSE)
validacao <- window(serie, start = c(2019,1))
write.xlsx(validacao,'amortecomentoExpon/validacao.xlsx')
write.csv(validacao,'amortecomentoExpon/validacao.csv', row.names = FALSE)
fit <- ses(treino[,2], h = 12, alpha = 0.8)
write.xlsx(fit,'amortecomentoExpon/fit.xlsx')
write.csv(fit,' amortecomentoExpon/fit.csv', row.names = FALSE)
install.packages("openxlsx")
install.packages("readxl")
install.packages('readxl')
install.packages('dplyr')
install.packages('openxlsx')
library(readxl)
library(dplyr)
library(openxlsx)
dados <- read_excel("pim.xlsx")
dados = dados %>%
mutate(Month_num = as.numeric(format(Month, '%Y')) * 12 + as.numeric(format(Month, '%m')))
model <- lm(Value ~ Month_num, data = dados)
dados = dados %>%
mutate(Tendencia = predict(model)) %>%
mutate(Value_detrended = Value - Tendencia)
head(dados)
write.csv(dados, 'pim_sem_tendencia.csv', row.names = FALSE)
write.xlsx(dados, 'pim_sem_tendencia.xlsx')
plot(dados$Month, dados$Value,
type = 'l',
col = 'blue',
main = "Série Temporal com e Sem Tendência",
xlab = "Mês",
ylab = "Valor",
ylim = c(min(dados$Value_detrended, na.rm = TRUE),
max(dados$Value, na.rm = TRUE)))
lines(dados$Month, dados$Tendencia,
col = 'red')
lines(dados$Month, dados$Value_detrended,
col = 'green')
legend('topright',
legend = c('Original', 'Tendência', 'Sem Tendência'),
col = c('blue', 'red', 'green'),
lty = 1)
install.packages("openxlsx")
install.packages("dplyr")
install.packages("readxl")
df_serie$Date <- as.yearmon(df_serie$Date)
df_serie
df_serie$Month <- as.yearmon(df_serie$Month)
df_serie
install.packages("dygraphs")
install.packages('readxl')
install.packages('openxlsx')
install.packages('ggplot2')
install.packages('gridExtra')
library(gridExtra)
library(openxlsx)
library(readxl)
library(dygraphs)
library(ggplot2)
library(grid)
dados <- read_excel('pim.xlsx')
head(dados)
tail(dados)
dados$Month <- as.Date(dados$Month)
dados <- dados[order(dados$Month),]
head(dados)
tail(dados)
serie <- ts(dados$Value, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
decomp_stl <- stl(serie, s.window = "periodic")
if(!dir.exists('decomposicao')){
dir.create('decomposicao')
}
df_serie <- data.frame(Month = as.yearmon(time(serie)),
Value = as.numeric(serie))
df_serie
df_serie$Month <- as.yearmon(df_serie$Month)
td_serie <- createWorkbook()
addWorksheet(td_serie, 'decomp_stl')
writeDataTable(td_serie, sheet = 'decomp_stl',x = df_serie,
tableStyle = 'TableStyleMedium2')
saveWorkbook(td_serie, 'decomposicao/td_serie.xlsx', overwrite = TRUE)
df <- data.frame(
Date = time(serie),
Tendencia = decomp_stl$time.series[,'trend'],
Sazonalidade <- decomp_stl$time.series[,'seasonal'],
residuos <- decomp_stl$time.series[,'remainder']
)
head(df)
df$Date <- as.yearmon(df$Date)
decomposicao <- createWorkbook()
addWorksheet(decomposicao, 'decomp_stl')
writeDataTable(decomposicao, sheet = 'decomp_stl',x = df,
tableStyle = 'TableStyleMedium2')
saveWorkbook(decomposicao, 'decomposicao/decomposicao.xlsx', overwrite = TRUE)
pdf(file = "decomposicao/graficos_pim.pdf", width = 8, height = 6)
ggplot(dados, aes(x = Month, y = Value)) +
geom_line(color = 'blue') +
labs(title = 'Grafico Original da Serie pim',
x = 'Mes',
y = 'Valor')
plot(decomp_stl, main = 'Decomposição da Serie pim')
dev.off()
install.packages("ggplot2")
install.packages("gridExtra")
install.packages("openxlsx")
install.packages("readxl")
install.packages("dygraphs")
serie <- read.table("clipboard")
serie
serie <- ts(serie, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
write.xlsx(serie,'multv_aditv/serie.xlsx')
library(readxl)
serie <- read_excel('pim.xlsx')
serie <- ts(serie, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
serie <- read.table("clipboard")
serie <- ts(serie, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
library(readxl)
serie <- read_excel('pim.xlsx')
serie <- ts(serie, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
library(openxlsx)
serie <- read.xlsx('pim.xlsx', sheet = 1)
serie <- ts(serie, start = c(2005,1), end = c(2019,12), frequency = 12)
serie
serie$MonTh <- as.yearmon(srie$Month)
serie$MonTh <- as.yearmon(serie$Month)
library(readxl)
library(dplyr)
library(openxlsx)
dados <- read_excel("pim.xlsx")
dados = dados %>%
mutate(Month_num = as.numeric(format(Month, '%Y')) * 12 + as.numeric(format(Month, '%m')))
model <- lm(Value ~ Month_num, data = dados)
dados = dados %>%
mutate(Tendencia = predict(model)) %>%
mutate(Value_detrended = Value - Tendencia)
head(dados)
if(dir.exists('tendencia')){
dir.create('tendencia')
}
write.csv(dados, 'tendencia/pim_sem_tendencia.csv', row.names = FALSE)
if(dir.exists('tendencia')){
dir.create('tendencia')
}
write.csv(dados, 'tendencia/pim_sem_tendencia.csv', row.names = FALSE)
if(dir.exists('tendencia')){
dir.create('tendencia')
}
if(dir.exists('tendencia')){
dir.create('tendencia')
}
source("C:/Users/Public/Documents/Faculdade_Antonio/Conteudo_Programatico/Ciencia_de_Dados/5º_periodo/Series_temporais/aula1/projeto_serie_temporal/scritp_pim.R")
